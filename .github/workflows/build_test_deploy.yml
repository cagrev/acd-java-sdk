name: GitHub Actions ACD Java SDK

on: [push, pull_request]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Install Dependencies
        run: mvn install

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Building Project
        run: mvn clean compile
        
      - name: Run Unit Tests
        run: mvn verify -fae -DskipITs
        
      - name: Report Status
        run: echo "This job's status is ${{ job.status }}."
        
      - name: Echo GitHub Ref
        run: echo "The GitHub Ref is ${{ github.ref }}."
      - name: Echo Commit Message
        run: echo "The Commit Message is ${{ github.event.head_commit.message }}."
      - name: Echo GitHub Event Name
        run: echo "The GitHub Event name is ${{ github.event_name }}."

  release:
    runs-on: ubuntu-latest
    needs: [verify, test]
    if: "github.event_name == 'push' && github.ref == 'refs/heads/master' && !startsWith(github.event.head_commit.message, 'chore')"
    permissions: write-all
    steps:
      - name: Setup Extensions
        uses: actions/checkout@v2
        with:
          persist-credentials: false
        
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          
      - name: Install Semantic Release dependencies
        run: |
          pip3 install --user bump2version
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/exec
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          
      - name: Get the next release from semantic release
        id: next_release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo ::set-output name=NEXT_RELEASE::$(npx semantic-release --dry-run | grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+")

      - name: Publish to git releases and tags
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --dry-run #temp use dry-run

      - name: Publish to maven central
        if: "github.event_name == 'push' && contains(github.ref, 'refs/tags')"
        env:
          GHA_TAG: "refs/tags/v${{ steps.next_release.outputs.NEXT_RELEASE }}"
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNIN_PASSPHRASE }}
        run: |
          echo "The next release is ${{ steps.next_release.outputs.NEXT_RELEASE }}"
          echo "Running script setupSigning"
          build/setupSigning_gha.sh
          echo "Running script setMavenVersion"
          build/setMavenVersion_gha.sh
          echo "Running mvn deploy"
          mvn deploy --settings build/.travis.settings.xml -DskipITs -Dskip.unit-tests -P central

      - name: Publish javadocs
        if: "github.event_name == 'push' && contains(github.ref, 'refs/tags')"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GHA_TAG: "refs/tags/v${{ steps.next_release.outputs.NEXT_RELEASE }}"
          GHA_COMMIT: ${{ github.sha }}
        run: |
          echo "Running script setMavenVersion"
          build/setMavenVersion_gha.sh
          echo "Running mvn clean"
          mvn clean javadocs:aggregate
          echo "Running script publish"
          build/publishJavadoc_gha.sh
